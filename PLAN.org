* [2/2] Day 1
  - [X] Extension builds
  - [X] Popup with link to relayx.com/wallet

* [3/3] Day 2
  - [X] inject window.relayone
  - [X] update relayone to forfeit loading the frame if extension is present
  - [X] window.relayone <-> extension messaging

* [2/2] Day 3
  - [X] [6/6] implement minimal viable relayone interface
    - [X] seed
    - [X] send
    - [X] encrypt
    - [X] decrypt
    - [X] sign
    - [X] authbeta
  - [X] Store seed

* [3/3] Day 4
  - [X] Changes to relayone-client to support talking to extension
  - [X] Implement relay wallet machinery that uses the seed
  - [X] Render permission popups

* [2/4] Day 5: Testing
  - [X] Permissions logic
  - [X] Firefox
  - [ ] Chrome
  - [ ] Brave

* [0/1] Day 6
  - [ ] Production build tooling
  - [ ] deploy new relayone-client on relayx.com 

* [0/1] Day 7
  - [ ] Rest
  - [ ] Nice to have: relayone.render() stub
  - [ ] Consider password protecting the seed and not giving entropy to relay UI

